{"version":3,"file":"static/js/847.c4c506e5.chunk.js","mappings":"wPASe,SAASA,IACpB,IAAAC,GAAsCC,EAAAA,EAAAA,MAA/BC,EAAQF,EAARE,SAAkBC,EAASH,EAAjBI,OACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,MAAYC,MACrBC,GAAYF,EAAAA,EAAAA,MAAYE,UACxBC,GAAUH,EAAAA,EAAAA,MAAYG,QACtBC,GAAQJ,EAAAA,EAAAA,MAAYI,MAE1BC,GAAwBC,EAAAA,EAAAA,UAASC,SAASZ,EAAUa,MAAM,KAAK,KAAO,GAAEC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAjEM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,EAAcV,EAAU,EAAIQ,EAE5BG,EAAUpB,EAASc,MAAM,KAAKd,EAASc,MAAM,KAAKO,OAAS,GAMjE,OAJAC,EAAAA,EAAAA,YAAU,WACNnB,GAASoB,EAAAA,EAAAA,IAAsB,CAACH,QAAAA,EAASH,KAAME,IACnD,GAAG,CAAChB,EAAUiB,EAASD,KAGnBK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACKrB,EAAOgB,OAAS,IACbM,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACrB,MAAOF,EACPwB,WAAY,SAACC,GAAI,OACbH,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CACCD,KAAMA,GADDA,EAAKE,GAEnB,IAGfxB,IACGmB,EAAAA,EAAAA,KAACM,EAAAA,GAAmB,CAChBzB,UAAWA,EACXS,KAAME,EACND,QAASA,IAIbR,IAASiB,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CAACC,QAA0B,kBAAVzB,EAAqBA,EAAQ,OAI7E,C","sources":["pages/GenrePages.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {Error, List, MovieItem, PaginationContainer} from '../components';\nimport {useAppDispatch, useMovies} from '../hooks';\nimport {\n    getMoviesByGenreThunk,\n} from '../store/movies';\n\nexport default function GenrePages() {\n    const {pathname, search: localPage} = useLocation();\n    const dispatch = useAppDispatch();\n\n    const movies = useMovies().items;\n    const totalPage = useMovies().totalPage;\n    const resPage = useMovies().resPage;\n    const error = useMovies().error;\n\n    const [page, setPage] = useState(parseInt(localPage.split('=')[1]) || 1);\n    const currentPage = resPage ? 1 : page;\n\n    const genreId = pathname.split('/')[pathname.split('/').length - 1];\n\n    useEffect(() => {\n        dispatch(getMoviesByGenreThunk({genreId, page: currentPage}));\n    }, [dispatch, genreId, currentPage]);\n\n    return (\n        <>\n            {movies.length > 0 &&\n                <List items={movies}\n                      renderItem={(item) =>\n                          <MovieItem key={item.id}\n                                     item={item}\n                          />}\n                />\n            }\n            {totalPage &&\n                <PaginationContainer\n                    totalPage={totalPage}\n                    page={currentPage}\n                    setPage={setPage}\n                />\n            }\n            {\n                error && <Error message={typeof error === 'string' ? error : ''}/>\n            }\n        </>\n    );\n};\n"],"names":["GenrePages","_useLocation","useLocation","pathname","localPage","search","dispatch","useAppDispatch","movies","useMovies","items","totalPage","resPage","error","_useState","useState","parseInt","split","_useState2","_slicedToArray","page","setPage","currentPage","genreId","length","useEffect","getMoviesByGenreThunk","_jsxs","_Fragment","children","_jsx","List","renderItem","item","MovieItem","id","PaginationContainer","Error","message"],"sourceRoot":""}